{"version":3,"sources":["app_images/life.svg","app_images/app-logo.png","ui/context/AAApConstants.js","ui/context/AppReducer.js","ui/context/actions/CommonActions.js","ui/add_offer/AddOfferActions.js","ui/all_offers/AllOffersActions.js","ui/context/GlobalState.js","ui/add_offer/AddOffer.js","ui/all_offers/AllOffers.js","ui/common/SideMenu.js","ui/common/AppBody.js","ui/common/AppBar.js","ui/common/ToastMessage.js","ui/common/AppDialog.js","ui/common/ImageDialog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DISMISS_CLASS","resetDefaultState","state","errorMessage","isCollected","action","type","payload","sideMenu","sideMenuOptions","map","menu","isSelected","rName","allOffers","displayToastGlobal","toastMessage","showModal","console","log","changedState","showImageModal","selectedOffer","offer","CommonActions","dispatch","setSideMenuButtons","pathname","setDismissToast","setShowToast","message","setDismissDialog","setShowDialog","dismissImageDialog","showImageDialog","this","AddOfferActions","addOffer","a","fetch","method","headers","body","JSON","stringify","res_dd","json","res_d","status","AllOfferActions","getAllOffers","offerList","initState","name","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","AllOffersActions","Provider","value","AddOffer","props","useState","offerTitle","setOfferTitle","offerDescription","setOfferDescription","offerOfferId","setOfferOfferId","useContext","history","push","className","src","lifeImg","alt","onSubmit","e","preventDefault","length","description","mainOfferID","htmlFor","onChange","target","id","placeholder","AllOffers","error","useEffect","class","tdJSX","index","key","onClick","offerQrCodePath","_displayMainData","withRouter","location","sideMenuJSX","i","to","exact","path","component","AppBar","appLogo","ToastMessage","setTimeout","AppDialog","escFunction","event","keyCode","document","addEventListener","xmlns","width","height","viewBox","d","ImageDialog","App","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,uNCuB9BC,EAAgB,gCChB7B,SAASC,EAAkBC,GACzB,OAAO,eAAIA,EAAX,CAAmBC,aAAe,GAAKC,aAAc,IAGxC,eAACF,EAAQG,GAAY,IAC1BC,EAAmBD,EAAnBC,KAAOC,EAAYF,EAAZE,QACf,OAAOD,GAEL,IDRiC,wBCS/B,IAAIE,EAAWN,EAAMO,gBAAgBC,KAAI,SAAAC,GAErC,OADAA,EAAKC,WAAaD,EAAKE,QAAUN,EAC1BI,KAEb,OAAO,eACFV,EAAkBC,GADvB,CAEEO,gBAAe,YAAOD,KAGxB,IDjB0B,iBCkB1B,OAAO,eACFP,EAAkBC,GADvB,CAEEY,UAAS,YAAOP,KAGlB,IDtBqB,YCuBrB,OAAO,eACFN,EAAkBC,GADvB,CAEEa,oBAAqB,EACrBC,aDbyB,6BCgB3B,ID5BsB,aC6BtB,OAAO,eACFd,EADL,CAEEC,aAAeI,EACfS,aAAeT,EACfQ,oBAAqB,IAEvB,IDlC+B,sBCmC7B,OAAO,eACFb,EADL,CAEEa,oBAAqB,EACrBC,aAAe,KAInB,IDzC4B,mBC0C1B,OAAO,eACFd,EADL,CAEEa,oBAAqB,EACrBC,aAAeT,IAGnB,ID9C2B,kBC+C3B,IDhD8B,qBCiD5B,OAAO,eACFL,EADL,CAEEe,UAAYV,IAIhB,IDpD2B,kBCqD3BW,QAAQC,IAAI,0BAA2BZ,GAEvC,IAAIa,EAAY,eACXlB,EADW,CAEdmB,eAAiBd,EAAQA,QACzBe,cAAgBf,EAAQgB,QAG1B,OADAL,QAAQC,IAAI,eAAgBC,GACrBA,EAEP,IDhE8B,qBCkE9B,OADAF,QAAQC,IAAI,6BAA8BZ,GACnC,eACFL,EADL,CAEEmB,eAAiBd,EAAQA,QACzBe,cAAgB,KAGlB,QACE,OAAOpB,I,OCZEsB,EApEb,WAAYC,GAAU,IAAD,gCAKrBC,mBAAqB,SAACC,GACpB,EAAKF,SAAS,CACZnB,KFR+B,wBES/BC,QAAUoB,KARO,KAYrBC,gBAAkB,WAChB,EAAKH,SAAS,CACZnB,KFX6B,sBEY7BC,QAAU,MAfO,KAmBrBsB,aAAe,SAACC,GACd,EAAKL,SAAS,CACZnB,KFjB0B,mBEkB1BC,QAAUuB,KAtBO,KA2BrBC,iBAAmB,WACjB,EAAKN,SAAS,CACZnB,KFxB4B,qBEyB5BC,QAAUP,KA9BO,KAkCrBgC,cAAgB,WACd,EAAKP,SAAS,CACZnB,KF9ByB,kBE+BzBC,QAAU,MArCO,KA0CrB0B,mBAAqB,WACnB,IAAM1B,EAAU,CACdA,QAAUP,EACVuB,MAAQ,IAEV,EAAKE,SAAS,CACZnB,KFzC4B,qBE0C5BC,QAAUA,KAjDO,KAqDrB2B,gBAAkB,SAACX,GAEjB,IAAIhB,EAAU,CACZA,QAAU,GACVgB,MAAQA,GAEVL,QAAQC,IAAI,UAAWZ,GACvB,EAAKkB,SAAS,CACZnB,KFrDyB,kBEsDzBC,QAAUA,KA7DZ4B,KAAKV,SAAWA,G,yBC0CLW,EA9Cb,WAAYX,GAAU,IAAD,gCAQrBY,SARqB,uCAQV,WAAOd,GAAP,iBAAAe,EAAA,+EAIcC,MAAM,kBAAmB,CAC5CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUrB,KAThB,cAIDsB,EAJC,gBAYaA,EAAOC,OAZpB,OAYDC,EAZC,OAcc,MAAlBF,EAAOG,OACLD,EAAMC,OACP,EAAKvB,SAAS,CACZnB,KHrBa,YGsBbC,QAAU,KAGZ,EAAKkB,SAAS,CAACnB,KHxBC,aGwBkBC,QAAO,sBAAkBwC,EAAMjB,WAInE,EAAKL,SAAS,CAACnB,KH5BG,aG4BgBC,QAAO,4BAAwBsC,EAAOG,UAzBnE,kDA6BP,EAAKvB,SAAS,CAACnB,KHhCK,aGgCcC,QAAO,wBAAoB,KAAMuB,WA7B5D,0DARU,sDACnBK,KAAKV,SAAWA,GCqCLwB,EAtCb,WAAYxB,GAAU,IAAD,gCAOrByB,aAPqB,sBAON,8BAAAZ,EAAA,+EAGUC,MAAM,uBAHhB,cAGLM,EAHK,gBAISA,EAAOC,OAJhB,OAILC,EAJK,OAMU,MAAlBF,EAAOG,OACLD,EAAMC,OACP,EAAKvB,SAAS,CACZnB,KJbkB,iBIclBC,QAAUwC,EAAMI,YAIlB,EAAK1B,SAAS,CAACnB,KJhBC,aIgBkBC,QAAO,sBAAkBwC,EAAMjB,WAGnE,EAAKL,SAAS,CAACnB,KJnBG,aImBgBC,QAAO,4BAAwBsC,EAAOG,UAjB/D,kDAqBX,EAAKvB,SAAS,CAACnB,KJvBK,aIuBcC,QAAO,wBAAoB,KAAMuB,WArBxD,0DANbK,KAAKV,SAAWA,GCGd2B,EAAY,CAChB3C,gBAAkB,CAChB,CAAE4C,KAAO,aAAezC,YAAa,EAAOC,MLTpB,KKUxB,CAAEwC,KAAO,YAAczC,YAAa,EAAOC,MLTpB,eKWzBC,UAAY,GACZQ,cAAgB,GAEhBnB,aAAc,GACdC,aAAa,EACbW,oBAAqB,EACrBC,aAAgB,GAChBC,UAAYjB,EACZqB,eAAiBrB,GAINsD,EAAgBC,wBAAcH,GAE9BI,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWC,EAAaP,GADJ,mBACvClD,EADuC,KAChCuB,EADgC,OAIiC,IAAID,EAAcC,GAD3FC,EAHwC,EAGxCA,mBAAoBE,EAHoB,EAGpBA,gBAAiBC,EAHG,EAGHA,aACrCE,EAJwC,EAIxCA,iBAAkBC,EAJsB,EAItBA,cAAeC,EAJO,EAIPA,mBAAoBC,EAJb,EAIaA,gBAErDG,EAAc,IAAID,EAAgBX,GAAlCY,SACAa,EAAkB,IAAIU,EAAiBnC,GAAvCyB,aAIN,OACE,kBAACI,EAAcO,SAAf,CAAwBC,MACtB,CACErD,gBAAkBP,EAAMO,gBACxBK,UAAYZ,EAAMY,UAClBY,qBACAwB,eACAb,WAGAf,cAAgBpB,EAAMoB,cAGtBnB,aAAeD,EAAMC,aACrBC,YAAcF,EAAME,YACpBW,mBAAqBb,EAAMa,mBAC3BC,aAAed,EAAMc,aACrBY,kBACAC,eACAZ,UAAWf,EAAMe,UACjBI,eAAgBnB,EAAMmB,eAEtBU,mBACAC,gBAEAC,qBACAC,oBAGDuB,IC/DMM,EAAW,SAACC,GAAW,IAAD,EAEGC,mBAAS,IAFZ,mBAE1BC,EAF0B,KAEdC,EAFc,OAGeF,mBAAS,IAHxB,mBAG1BG,EAH0B,KAGRC,EAHQ,OAIOJ,mBAAS,IAJhB,mBAI1BK,EAJ0B,KAIZC,EAJY,OAOkCC,qBAAWlB,GAAvEjB,EAP0B,EAO1BA,SAAUR,EAPgB,EAOhBA,aAAcb,EAPE,EAOFA,aAAcU,EAPZ,EAOYA,mBAkC7C,MNxB6B,6BMkB1BV,IACDa,ENnB2B,4BMoB3BH,ENxCwB,KMyCxBsC,EAAMS,QAAQC,KNzCU,MM6CxB,6BAEQ,yBAAKC,UAAU,kCACX,yBAAKA,UAAU,qBACX,yBACAA,UAAU,uBACVC,IAAKC,IACLC,IAAI,eACJ,uBAAGH,UAAU,4BAAb,cAEJ,6BACI,uBAAGA,UAAU,aAAb,qCAKR,6BAASA,UAAU,oDAEjB,6BAASA,UAAU,qEACjB,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,qDACX,uBAAGA,UAAU,0BAAb,sBACA,0BACEI,SAvDP,SAAAC,GAGf,GAFAA,EAAEC,iBAEyB,IAAxBX,EAAaY,OACdrD,EAAa,8BAEV,GAAyB,IAAtBqC,EAAWgB,OACjBrD,EAAa,iCACT,GAA+B,IAA5BuC,EAAiBc,OACxBrD,EAAa,sCACT,CAMJQ,EALc,CACZ6B,aACAiB,YAAcf,EACdgB,YAAcd,MA0CGK,UAAU,OACR,yBAAKA,UAAU,QACd,2BAAOA,UAAU,6CAA6CU,QAAQ,YAAtE,YAGA,2BACAvB,MAAOQ,EACPgB,SAAU,SAACN,GAAD,OAAMT,EAAgBS,EAAEO,OAAOzB,QACzCa,UAAU,6HACVa,GAAG,WACHlF,KAAK,OACLmF,YAAY,cAEd,yBAAKd,UAAU,QACb,2BAAOA,UAAU,6CAA6CU,QAAQ,YAAtE,SAGA,2BACAvB,MAAOI,EACPoB,SAAU,SAACN,GAAD,OAAMb,EAAca,EAAEO,OAAOzB,QACvCa,UAAU,6HACVa,GAAG,WACHlF,KAAK,OACLmF,YAAY,WAEd,yBAAKd,UAAU,QACb,2BAAOA,UAAU,6CAA6CU,QAAQ,YAAtE,eAGA,2BACAvB,MAAOM,EACPkB,SAAU,SAACN,GAAD,OAAMX,EAAoBW,EAAEO,OAAOzB,QAC7Ca,UAAU,6HACVa,GAAG,WACHlF,KAAK,OACLmF,YAAY,iBAEd,4BAAQd,UAAU,+GAA+GrE,KAAK,UAAtI,iB,OCtBnB,IAAMoF,EAAY,WAAO,IAjFTC,EAiFQ,EAEoCnB,qBAAWlB,GAArEJ,EAFsB,EAEtBA,aAAcpC,EAFQ,EAERA,UAAWX,EAFH,EAEGA,aAAc+B,EAFjB,EAEiBA,gBAO9C,OAJA0D,qBAAU,WACR1C,MACC,IAEuB,GAAvB/C,EAAa+E,QA1FKS,EA2FExF,EAzFrB,yBAAK0F,MAAM,oDACT,uBAAGlB,UAAU,sBAAsBgB,KAKzC,SAA0B7E,EAAWoB,GACnC,IAAI4D,EAAQ,GAiCZ,OA9BGhF,IACDgF,EAAQhF,EAAUJ,KAAI,SAACa,EAAOwE,GAC5B,OACE,wBAAIC,IAAKD,GACP,wBAAIpB,UAAU,oCACZ,yBACAA,UAAU,OACVC,IAAI,qFAAqFE,IAAI,eAE/F,wBAAIH,UAAU,oBAAoBpD,EAAM2C,YACxC,wBAAIS,UAAU,oBACZ,4BAAQA,UAAU,iJAAlB,SAIF,wBAAIA,UAAU,oBACZ,4BAAQA,UAAU,2IAAlB,WAIF,wBAAIA,UAAU,mCACZ,yBACCsB,QAAS,kBAAM/D,EAAgBX,IAChCoD,UAAU,sBACVC,IAAG,wCAAmCrD,EAAM2E,iBAAmBpB,IAAI,oBAO3E,6BAEM,yBAAKH,UAAU,kCACX,yBAAKA,UAAU,qBACX,yBACAA,UAAU,uBACVC,IAAKC,IACLC,IAAI,eACJ,uBAAGH,UAAU,4BAAb,eAEJ,6BACI,uBAAGA,UAAU,aAAb,wBAKR,6BAASA,UAAU,oDAEjB,2BAAOA,UAAU,sCACf,2BAAOA,UAAU,qDACf,4BACE,wBAAIA,UAAU,aAAd,SACA,wBAAIA,UAAU,aAAd,SACA,wBAAIA,UAAU,aAAd,QACA,wBAAIA,UAAU,aAAd,UACA,wBAAIA,UAAU,aAAd,aAGJ,+BACGmB,MAqBNK,CAAiBrF,EAAWoB,IC/DxBkE,mBA7Bf,SAAmBpC,GAAQ,IACjBrC,EAAaqC,EAAMqC,SAAnB1E,SADgB,EAEwB6C,qBAAWlB,GAAnD5B,EAFgB,EAEhBA,mBAAoBjB,EAFJ,EAEIA,gBAE5BmF,qBAAU,WACRlE,EAAmBC,KAClB,IAGH,IAAI2E,EAAc7F,EAAgBC,KAAI,SAACC,EAAM4F,GAC3C,OACE,yBAAKP,IAAKO,GACR,kBAAC,IAAD,CAAM5B,UAAU,0DACN6B,GAAI7F,EAAKE,MAAOoF,QAAS,kBAAMvE,EAAmBf,EAAKE,SAC/D,yBAAK8D,UAAS,oBAAehE,EAAKC,WAAa,qBAAuB,GAAxD,oBACXD,EAAK0C,WAOhB,OACI,6BAASsB,UAAU,0FAChB2B,MCJMF,mBAhBf,SAAkBpC,GAEhB,OACE,6BACA,6BAASW,UAAU,kBACf,kBAAC,EAAD,MACA,6BAASA,UAAU,yEACf,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KTfG,ISeiBC,UAAWjB,IAC5C,kBAAC,IAAD,CAAOe,OAAK,EAACC,KTfE,aSeiBC,UAAW5C,U,iBCf1C6C,EAAS,WACpB,OACE,oCACE,6BAASjC,UAAU,kDACjB,yBAAKA,UAAU,iCACX,yBACAA,UAAU,wDACVC,IAAKiC,IACL/B,IAAI,aACJ,uBAAGH,UAAU,qCAAb,iBCTCmC,EAAe,WAAO,IAAD,EAE6BtC,qBAAWlB,GAAjEvC,EAFyB,EAEzBA,mBAAoBa,EAFK,EAELA,gBAAiBZ,EAFZ,EAEYA,aAa5C,OAVA4E,qBAAU,WACL7E,GACDgG,YAAW,WACTnF,MAEF,QAED,CAACb,IAIF,oCACE,yBAAKyE,GAAG,WAAWb,UAAS,UAAK5D,EAAqB,OAAS,KAAOC,KCjB/DgG,EAAY,WAAO,IAAD,EAGSxC,qBAAWlB,GAA1CrC,EAHsB,EAGtBA,UAAWc,EAHW,EAGXA,iBAElB,SAASkF,EAAYC,GACE,KAAlBA,EAAMC,SACPpF,IAUJ,OANA6D,qBAAU,WACRwB,SAASC,iBAAiB,UAAWJ,GAAa,KACjD,IAKD,oCAGF,yBAAKtC,UAAS,kFAA6E1D,IACzF,yBAAK0D,UAAU,gEAEf,yBAAKA,UAAU,+FAEb,yBAAKA,UAAU,kHACb,yBAAKA,UAAU,0BAA0B2C,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aACzG,0BAAMC,EAAE,wHAEV,0BAAM/C,UAAU,WAAhB,UAIF,yBAAKA,UAAU,qCAEb,yBAAKA,UAAU,0CACb,uBAAGA,UAAU,sBAAb,iBACA,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,0BAA0B2C,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aACzG,0BAAMC,EAAE,0HAMd,wDAGA,yBAAK/C,UAAU,yBACb,4BAAQA,UAAU,mGAAlB,UACA,4BACAsB,QAASlE,EACT4C,UAAU,gFAFV,eCnDGgD,EAAc,WAAO,IAAD,EAE2BnD,qBAAWlB,GAAhEjC,EAF0B,EAE1BA,eAAgBY,EAFU,EAEVA,mBAAoBX,EAFV,EAEUA,cAEpC4C,EAA+B5C,EAA/B4C,WAAYgC,EAAmB5E,EAAnB4E,gBAEjB,SAASe,EAAYC,GACE,KAAlBA,EAAMC,SACPlF,IASJ,OALA2D,qBAAU,WACRwB,SAASC,iBAAiB,UAAWJ,GAAa,KACjD,IAID,oCAGF,yBAAKtC,UAAS,kFAA6EtD,IACzF,yBAAKsD,UAAU,gEACf,yBAAKA,UAAU,qFAEb,yBACAsB,QAAShE,EACT0C,UAAU,kHACR,yBAAKA,UAAU,0BAA0B2C,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aACzG,0BAAMC,EAAE,wHAEV,0BAAM/C,UAAU,WAAhB,UAIF,yBAAKA,UAAU,qCAEb,yBAAKA,UAAU,0CACb,uBAAGA,UAAU,sBAAsBT,GACnC,yBACA+B,QAAShE,EACT0C,UAAU,mCACR,yBAAKA,UAAU,0BAA0B2C,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aACzG,0BAAMC,EAAE,0HA+Bd,yBACA/C,UAAU,eACVC,IAAG,wCAAmCsB,GACtCpB,IAAI,iBAOJ,yBAAKH,UAAU,+BC3DRiD,MAff,WAEE,OACC,kBAAC,EAAD,KACE,kBAAC,IAAD,KACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCVcC,QACW,cAA7BC,OAAOzB,SAAS0B,UAEe,UAA7BD,OAAOzB,SAAS0B,UAEhBD,OAAOzB,SAAS0B,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASd,SAASe,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/C,GACLzE,QAAQyE,MAAMA,EAAM7D,c","file":"static/js/main.8b5df475.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/life.882f236d.svg\";","module.exports = __webpack_public_path__ + \"static/media/app-logo.37bc46d9.png\";","//  All Routes\n// export const R_HOME = '/'\nexport const R_ALL_OFFERS = '/'\nexport const R_ADD_OFFER = '/add-offer'\n\n\n// All Actions\nexport const SET_SIDE_MENU_OPTIONS = 'SET_SIDE_MENU_OPTIONS'\nexport const GET_ALL_OFFERS = 'GET_ALL_OFFERS'\nexport const ADD_OFFER = 'ADD_OFFER'\nexport const SHOW_ERROR = 'SHOW_ERROR'\nexport const DISMISS_ERROR_TOAST = 'DISMISS_ERROR_TOAST'\nexport const SHOW_ERROR_TOAST = 'SHOW_ERROR_TOAST'\nexport const DISMISS_APP_DIALOG = 'DISMISS_APP_DIALOG'\nexport const SHOW_APP_DIALOG = 'SHOW_APP_DIALOG'\nexport const DISMISS_IMG_DIALOG = 'DISMISS_IMG_DIALOG'\nexport const SHOW_IMG_DIALOG = 'SHOW_IMG_DIALOG'\n\n\n\n\n// Message Constants \nexport const MSG_OFFER_ADDED = \"Offer Added Successfully\" \nexport const DISMISS_CLASS = \"opacity-0 pointer-events-none\" \n\n\n","import {SET_SIDE_MENU_OPTIONS, GET_ALL_OFFERS, SHOW_ERROR, \n  ADD_OFFER, DISMISS_ERROR_TOAST, SHOW_ERROR_TOAST,\n  MSG_OFFER_ADDED, DISMISS_APP_DIALOG, SHOW_APP_DIALOG, \n  DISMISS_IMG_DIALOG, SHOW_IMG_DIALOG\n} from './AAApConstants'\n\n\nfunction resetDefaultState(state) {\n  return {...state , errorMessage : '' , isCollected : false}\n}\n\nexport default (state , action) => {\n  const { type , payload } = action\n  switch(type){\n    \n    case SET_SIDE_MENU_OPTIONS:\n      let sideMenu = state.sideMenuOptions.map(menu=> {\n          menu.isSelected = menu.rName === payload \n          return menu\n      })\n    return {\n      ...resetDefaultState(state),\n      sideMenuOptions : [...sideMenu],\n    }\n\n    case GET_ALL_OFFERS:\n    return {\n      ...resetDefaultState(state),\n      allOffers : [...payload],\n    }\n\n    case ADD_OFFER:\n    return {\n      ...resetDefaultState(state),\n      displayToastGlobal : true,\n      toastMessage : MSG_OFFER_ADDED\n    }\n\n    case SHOW_ERROR:\n    return {\n      ...state , \n      errorMessage : payload,\n      toastMessage : payload,\n      displayToastGlobal : true\n    }\n    case DISMISS_ERROR_TOAST:\n      return {\n        ...state,\n        displayToastGlobal : false,\n        toastMessage : ''\n      }\n\n\n    case SHOW_ERROR_TOAST:\n      return {\n        ...state,\n        displayToastGlobal : true,\n        toastMessage : payload\n      }\n\n    case SHOW_APP_DIALOG:\n    case DISMISS_APP_DIALOG:\n      return {\n        ...state,\n        showModal : payload\n      }\n\n\n    case SHOW_IMG_DIALOG:\n    console.log('payload SHOW_IMG_DIALOG', payload)\n\n    let changedState = {\n      ...state,\n      showImageModal : payload.payload,\n      selectedOffer : payload.offer\n    }\n    console.log('changedState', changedState)\n    return changedState\n        \n    case DISMISS_IMG_DIALOG:\n    console.log('payload DISMISS_IMG_DIALOG', payload)\n    return {\n      ...state,\n      showImageModal : payload.payload,\n      selectedOffer : {}\n    }\n\n    default:\n      return state\n  }\n}\n\n\n","import { SET_SIDE_MENU_OPTIONS, \n  DISMISS_ERROR_TOAST, SHOW_ERROR_TOAST,DISMISS_APP_DIALOG,SHOW_APP_DIALOG,DISMISS_CLASS,\n  DISMISS_IMG_DIALOG, SHOW_IMG_DIALOG\n} from '../../context/AAApConstants'\n\n\nclass CommonActions {\n\n  constructor(dispatch){\n    this.dispatch = dispatch\n  }\n\n  // Set Side menu buttons \n  setSideMenuButtons = (pathname) => {\n    this.dispatch({\n      type : SET_SIDE_MENU_OPTIONS, \n      payload : pathname\n    })\n  }\n\n  setDismissToast = () => {\n    this.dispatch({\n      type : DISMISS_ERROR_TOAST, \n      payload : ''\n    })\n  }\n  // show toast value  \n  setShowToast = (message) => {\n    this.dispatch({\n      type : SHOW_ERROR_TOAST, \n      payload : message\n    })\n  }\n\n  // dismiss app dialog\n  setDismissDialog = () => {\n    this.dispatch({\n      type : DISMISS_APP_DIALOG, \n      payload : DISMISS_CLASS\n      })\n  }\n  // show app dialog\n  setShowDialog = () => {\n    this.dispatch({\n      type : SHOW_APP_DIALOG, \n      payload : ''\n    })\n  }\n\n  // dismiss app dialog\n  dismissImageDialog = () => {\n    const payload = {\n      payload : DISMISS_CLASS,\n      offer : {}\n    }\n    this.dispatch({\n      type : DISMISS_IMG_DIALOG, \n      payload : payload\n      })\n  }\n  // show app dialog\n  showImageDialog = (offer) => {\n    \n    let payload = {\n      payload : '',\n      offer : offer\n    }\n    console.log('payload', payload)\n    this.dispatch({\n      type : SHOW_IMG_DIALOG, \n      payload : payload\n    })\n  }\n\n}\n\nexport default CommonActions;\n","import { SHOW_ERROR, ADD_OFFER} from '../context/AAApConstants'\n\n\nclass AddOfferActions {\n\n  constructor(dispatch){\n    this.dispatch = dispatch\n  }\n\n\n  //Actions \n  // Get All Offers\n  // Add Offer\n  addOffer = async (offer) => {\n\n    try {\n\n      const res_dd = await fetch('offers/addOffer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(offer)\n      });\n      \n      const res_d = await res_dd.json()  \n\n      if(res_dd.status === 200){\n        if(res_d.status){\n          this.dispatch({\n            type : ADD_OFFER, \n            payload : {}\n          })\n        }else {\n          this.dispatch({type : SHOW_ERROR, payload : `API ERROR : ${res_d.message}`})  \n        }\n        \n      }else {\n        this.dispatch({type : SHOW_ERROR, payload : `HTTP ERROR Code : ${res_dd.status}`})  \n      }\n      \n    } catch (error) {\n      this.dispatch({type : SHOW_ERROR, payload : `Error Details ${error.message}`})\n    }\n    \n  }\n\n  \n}\n\n\nexport default AddOfferActions;\n","import {  GET_ALL_OFFERS, SHOW_ERROR} from '../context/AAApConstants'\n\n\nclass AllOfferActions {\n\n  constructor(dispatch){\n    this.dispatch = dispatch\n  }\n\n\n  //Actions \n  // Get All Offers\n  getAllOffers = async () => {\n\n    try {\n      const res_dd = await fetch('offers/getAllOffers')\n      const res_d = await res_dd.json()  \n\n      if(res_dd.status === 200){\n        if(res_d.status){\n          this.dispatch({\n            type : GET_ALL_OFFERS, \n            payload : res_d.offerList\n          })\n        }\n        else {\n          this.dispatch({type : SHOW_ERROR, payload : `API ERROR : ${res_d.message}`})  \n        }\n      }else {\n        this.dispatch({type : SHOW_ERROR, payload : `HTTP ERROR Code : ${res_dd.status}`})  \n      }\n      \n    } catch (error) {\n      this.dispatch({type : SHOW_ERROR, payload : `Error Details ${error.message}`})\n    }\n    \n  }\n\n  \n   \n}\n\n\nexport default AllOfferActions;\n","import React ,{createContext, useReducer} from 'react'\nimport AppReducer from './AppReducer'\nimport { R_ALL_OFFERS , R_ADD_OFFER,DISMISS_CLASS} from './AAApConstants'\nimport CommonActions from './actions/CommonActions'\nimport AddOfferActions from '../add_offer/AddOfferActions'\nimport AllOffersActions from '../all_offers/AllOffersActions'\n\n\n// Init State\nconst initState = {\n  sideMenuOptions : [\n    { name : \"All Offers\" , isSelected : false, rName : R_ALL_OFFERS },\n    { name : \"Add Offer\" , isSelected : false, rName : R_ADD_OFFER } ,\n  ],\n  allOffers : [],\n  selectedOffer : {},\n\n  errorMessage: '',\n  isCollected :false,\n  displayToastGlobal : false,\n  toastMessage  : '',\n  showModal : DISMISS_CLASS,\n  showImageModal : DISMISS_CLASS\n}\n\n// Create global context\nexport const GlobalContext = createContext(initState) \n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer , initState) \n\n  let { setSideMenuButtons, setDismissToast, setShowToast,\n        setDismissDialog, setShowDialog, dismissImageDialog, showImageDialog}  = new CommonActions(dispatch)\n\n  let { addOffer }  = new AddOfferActions(dispatch)\n  let { getAllOffers }  = new AllOffersActions(dispatch)\n\n        \n\n  return (\n    <GlobalContext.Provider value={\n      {\n        sideMenuOptions : state.sideMenuOptions,\n        allOffers : state.allOffers,\n        setSideMenuButtons,\n        getAllOffers,\n        addOffer,\n\n        // Selected Offer \n        selectedOffer : state.selectedOffer,\n\n        // Default/Common States\n        errorMessage : state.errorMessage,\n        isCollected : state.isCollected,\n        displayToastGlobal : state.displayToastGlobal,\n        toastMessage : state.toastMessage,\n        setDismissToast,\n        setShowToast,\n        showModal: state.showModal,\n        showImageModal: state.showImageModal,\n        // App Dialog\n        setDismissDialog,\n        setShowDialog,\n        // Image Dialog\n        dismissImageDialog,\n        showImageDialog\n\n      }}>\n      {children}\n    </GlobalContext.Provider>\n  )\n}\n\n\n\n\n\n\n","import React, { useState, useContext } from 'react'\nimport lifeImg from '../../app_images/life.svg'\nimport {GlobalContext} from '../context/GlobalState'\nimport {MSG_OFFER_ADDED, R_ALL_OFFERS} from '../context/AAApConstants'\n\nexport const AddOffer = (props) => {\n\n  const [offerTitle, setOfferTitle] = useState('')\n  const [offerDescription, setOfferDescription] = useState('')\n  const [offerOfferId, setOfferOfferId] = useState('')\n  \n\n  const {addOffer, setShowToast, toastMessage, setSideMenuButtons} = useContext(GlobalContext)\n\n\n  const onSubmit = e => {\n    e.preventDefault()\n\n    if(offerOfferId.length === 0){\n      setShowToast('Please enter Offer ID')\n    }\n    else if(offerTitle.length === 0){\n      setShowToast('Please enter Offer Title')\n    }else if(offerDescription.length === 0){\n      setShowToast('Please enter Offer Description')\n    }else {\n      const offer = {\n        offerTitle,\n        description : offerDescription,\n        mainOfferID : offerOfferId\n      }\n      addOffer(offer)\n    }\n\n\n\n    \n  } \n\n\n  if(toastMessage === MSG_OFFER_ADDED){\n    setShowToast(MSG_OFFER_ADDED)\n    setSideMenuButtons(R_ALL_OFFERS)\n    props.history.push(R_ALL_OFFERS)\n  }\n  \n  return (\n    <div>\n        {/* <!-- Dashboard Header --> */}\n            <div className=\"body-main-bar w-full px-8 py-8\">\n                <div className=\"flex items-center\">\n                    <img \n                    className=\"w-10 h-10 heart-beat\"\n                    src={lifeImg} \n                    alt=\"heart_beat\"/>\n                    <p className=\"text-4xl ml-2 text-white\">Add Offer</p>\n                </div>\n                <div>\n                    <p className=\"text-alfa\">Add a new offer for the mocking</p>\n                </div>\n            </div>        \n            \n            {/* <!-- Dashboard Content --> */}\n            <section className=\"flex app-primary-font text-lg px-5 pb-5 bg-white\">\n              \n              <section className=\"w-full flex app-primary-font text-bold text-lg px-5 pb-5 h-screen\">\n                <div className=\"w-full pr-3 lg:w-1/2\">\n                    <div className=\"bg-white rounded shadow-lg overflow-hidden -mt-32\">\n                        <p className=\"p-4 bg-gray-200 w-full\">Area Chart Example</p>\n                        <form\n                          onSubmit={onSubmit}\n                         className=\"p-4\">\n                           <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n                              Offer ID\n                            </label>\n                            <input \n                            value={offerOfferId}\n                            onChange={(e)=> setOfferOfferId(e.target.value)}\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n                            id=\"username\" \n                            type=\"text\" \n                            placeholder=\"Offer ID\"/>\n                          </div>\n                          <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n                              Title\n                            </label>\n                            <input \n                            value={offerTitle}\n                            onChange={(e)=> setOfferTitle(e.target.value)}\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n                            id=\"username\" \n                            type=\"text\" \n                            placeholder=\"Title\"/>\n                          </div>\n                          <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n                              Description\n                            </label>\n                            <input \n                            value={offerDescription}\n                            onChange={(e)=> setOfferDescription(e.target.value)}\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n                            id=\"username\" \n                            type=\"text\" \n                            placeholder=\"Description\"/>\n                          </div>\n                          <button className=\"bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline text-base\" type=\"submit\">\n                            Submit\n                          </button>\n\n                        </form>\n                    </div>\n                </div>\n              </section>\n                \n            </section>\n\n\n            \n    </div>\n  )\n}\n","import React, {useEffect, useContext} from 'react'\nimport lifeImg from '../../app_images/life.svg'\nimport {GlobalContext} from '../context/GlobalState'\n\n\nfunction _displayError(error){\n  return (\n    <div class=\"h-screen w-full flex justify-center items-center\">\n      <p className=\"w-full text-center\">{error}</p>\n    </div>\n  )\n}\n\nfunction _displayMainData(allOffers, showImageDialog) {\n  let tdJSX = []\n  \n\n  if(allOffers){\n    tdJSX = allOffers.map((offer, index)=>{\n      return (\n        <tr key={index}>\n          <td className=\"border px-4 py-2 table-img-width\">\n            <img \n            className=\"h-32\"\n            src=\"https://startbootstrap.com/assets/img/screenshots/premium/sb-admin-pro-angular.jpg\" alt=\"offer_img\"/>\n          </td>\n          <td className=\"border px-4 py-2\">{offer.offerTitle}</td>\n          <td className=\"border px-4 py-2\">\n            <button className=\"bg-transparent hover:bg-green-500 text-green-700  hover:text-white py-2 px-4 border border-green-500 hover:border-transparent rounded text-sm\" >\n              Edit\n            </button>\n          </td>\n          <td className=\"border px-4 py-2\">\n            <button className=\"bg-transparent hover:bg-red-500 text-red-700  hover:text-white py-2 px-4 border border-red-500 hover:border-transparent rounded text-sm\">\n              Delete\n            </button>\n          </td>\n          <td className=\"border px-4 py-2 table-qr-width\">\n            <img \n             onClick={() => showImageDialog(offer)} \n            className=\"h-32 cursor-pointer\"\n            src={`https://offers-a.herokuapp.com${offer.offerQrCodePath}`} alt=\"offer_img\"/>\n          </td>\n        </tr>\n      )\n    })\n  }\n  return (\n    <div>\n    {/* <!-- Dashboard Header --> */}\n          <div className=\"body-main-bar w-full px-8 py-8\">\n              <div className=\"flex items-center\">\n                  <img \n                  className=\"w-10 h-10 heart-beat\"\n                  src={lifeImg} \n                  alt=\"heart_beat\"/>\n                  <p className=\"text-4xl ml-2 text-white\">All Offers</p>\n              </div>\n              <div>\n                  <p className=\"text-alfa\">List of all offers</p>\n              </div>\n          </div>        \n          \n          {/* <!-- Dashboard Content --> */}\n          <section className=\"flex app-primary-font text-lg px-5 pb-5 bg-white\">\n\n            <table className=\"table-auto rounded -mt-32 bg-white\">\n              <thead className=\"bg-gray-200 border-gray-200 border rounded shadow\">\n                <tr>\n                  <td className=\"px-4 py-2\">Image</td>\n                  <td className=\"px-4 py-2\">Title</td>\n                  <td className=\"px-4 py-2\">Edit</td>\n                  <td className=\"px-4 py-2\">Delete</td>\n                  <td className=\"px-4 py-2\">QR Code</td>\n                </tr>\n              </thead>\n              <tbody>\n                {tdJSX}\n              </tbody>\n            </table>\n          </section>\n  </div>\n  )\n}\n\n\nexport const AllOffers = () => {\n\n  const {getAllOffers, allOffers, errorMessage, showImageDialog} = useContext(GlobalContext)\n\n  \n  useEffect(()=> {\n    getAllOffers()\n  }, [])\n\n  if(errorMessage.length != 0){\n    return _displayError(errorMessage)\n  }else {\n    return _displayMainData(allOffers, showImageDialog)\n  }\n  \n}\n","import React, {useEffect, useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport {withRouter} from 'react-router-dom'\nimport { GlobalContext } from '../context/GlobalState'\n\n\nfunction SideMenu (props) {\n  const { pathname } = props.location\n  const { setSideMenuButtons, sideMenuOptions } = useContext(GlobalContext)\n\n  useEffect(() => {\n    setSideMenuButtons(pathname)\n  }, [])\n\n\n  let sideMenuJSX = sideMenuOptions.map((menu, i)=> {\n    return (\n      <div key={i}>\n        <Link className=\"nav-link  text-white text-center cursor-pointer w-full \" \n                  to={menu.rName} onClick={() => setSideMenuButtons(menu.rName)}>\n          <div className={`py-4 px-6 ${menu.isSelected ? 'side-menu-selected' : ''} side-navbutton`}>\n            {menu.name}\n          </div>\n        </Link>\n      </div>\n    )\n  })\n  \n  return (\n      <section className=\"md:w-56 md:h-screen side-top-padding md:visible hidden md:block shadow-2xl side-bar-bg\">\n        {sideMenuJSX}\n      </section>\n  )\n}\n\nexport default withRouter(SideMenu);\n\n","import React from 'react'\nimport {AddOffer} from '../add_offer/AddOffer'\nimport {  Route } from 'react-router-dom'\nimport { AllOffers } from '../all_offers/AllOffers'\nimport SideMenu from '../common/SideMenu'\nimport {withRouter} from 'react-router-dom'\nimport {R_ADD_OFFER , R_ALL_OFFERS} from '../context/AAApConstants'\n\n\n\nfunction AppBody (props) {\n\n  return (\n    <div>\n    <section className=\"main-body flex\">\n        <SideMenu/>\n        <section className=\"main-body bg-gray-200 w-full h-screen flex-shrink overflow-auto pt-14\">\n            <Route exact path={R_ALL_OFFERS} component={AllOffers}/>\n            <Route exact path={R_ADD_OFFER} component={AddOffer}/>\n        </section>\n    </section>\n    </div>\n  )\n}\n\n\nexport default withRouter(AppBody);","import React from 'react'\nimport appLogo from '../../app_images/app-logo.png'\n\nexport const AppBar = () => {\n  return (\n    <>\n      <section className=\"fixed top-bar w-full shadow-md h-14 top-bar-bg\">\n        <div className=\"w-48 h-full flex items-center\">\n            <img \n            className=\"object-cover w-8 h-8 ml-4 mt-1 shadow-lg rounded-full\"\n            src={appLogo}\n            alt=\"app_logo\"/>\n            <p className=\"ml-4 text-white text-lg text-bold\">Dashboard</p>\n        </div>\n      </section>      \n    </>\n  )\n}\n","import React,{useContext, useEffect} from 'react'\nimport {GlobalContext} from '../../ui/context/GlobalState'\n\nexport const ToastMessage = () => {\n\n  const {displayToastGlobal, setDismissToast, toastMessage } = useContext(GlobalContext)\n  \n\n  useEffect(() => {\n    if(displayToastGlobal){\n      setTimeout(()=> {\n        setDismissToast()                \n      },\n      2500)\n    }\n  }, [displayToastGlobal])\n\n\n  return (\n    <>\n      <div id=\"snackbar\" className={`${displayToastGlobal ? \"show\" : \"\"}`}>{toastMessage}</div>\n    </>\n  )\n}\n","import React, {useContext, useEffect} from 'react'\nimport {GlobalContext} from '../context/GlobalState'\n\nexport const AppDialog = () => {\n  \n  \n  const {showModal, setDismissDialog} = useContext(GlobalContext)\n\n  function escFunction(event){\n    if(event.keyCode === 27) {\n      setDismissDialog()\n    }\n  }\n  \n  useEffect(()=> {\n    document.addEventListener(\"keydown\", escFunction, false);\n  }, [])\n\n\n  \n  return (\n    <>\n    {/* <!--Modal--> */}\n  \n  <div className={`modal fixed w-full h-full top-0 left-0 flex items-center justify-center ${showModal}`}>\n    <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\"></div>\n    \n    <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n      \n      <div className=\"modal-close absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-50\">\n        <svg className=\"fill-current text-white\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n          <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n        </svg>\n        <span className=\"text-sm\">(Esc)</span>\n      </div>\n\n      {/* <!-- Add margin if you want to see some of the overlay behind the modal--> */}\n      <div className=\"modal-content py-4 text-left px-6\">\n        {/* <!--Title--> */}\n        <div className=\"flex justify-between items-center pb-3\">\n          <p className=\"text-2xl font-bold\">Simple Modal!</p>\n          <div className=\"modal-close cursor-pointer z-50\">\n            <svg className=\"fill-current text-black\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n              <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n            </svg>\n          </div>\n        </div>\n\n        {/* <!--Body--> */}\n        <p>Modal content can go here</p>\n        \n        {/* <!--Footer--> */}\n        <div className=\"flex justify-end pt-2\">\n          <button className=\"px-4 bg-transparent p-3 rounded-lg text-indigo-500 hover:bg-gray-100 hover:text-indigo-400 mr-2\">Action</button>\n          <button\n          onClick={setDismissDialog} \n          className=\"modal-close px-4 bg-indigo-500 p-3 rounded-lg text-white hover:bg-indigo-400\">Close</button>\n        </div>\n        \n      </div>\n    </div>\n  </div>\n  </>\n  )\n}\n","import React , {useContext, useEffect} from 'react'\nimport {GlobalContext} from '../context/GlobalState'\n\nexport const ImageDialog = () => {\n\n  let {showImageModal, dismissImageDialog, selectedOffer} = useContext(GlobalContext)\n\n  let {offerTitle, offerQrCodePath} = selectedOffer\n\n  function escFunction(event){\n    if(event.keyCode === 27) {\n      dismissImageDialog()\n    }\n  }\n\n  useEffect(()=> {\n    document.addEventListener(\"keydown\", escFunction, false);\n  }, [])\n\n\n  return (\n    <>\n    {/* <!--Modal--> */}\n  \n  <div className={`modal fixed w-full h-full top-0 left-0 flex items-center justify-center ${showImageModal}`}>\n    <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\"></div>\n    <div className=\"modal-container bg-white max-w-2xl mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n\n      <div \n      onClick={dismissImageDialog} \n      className=\"modal-close absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-50\">\n        <svg className=\"fill-current text-white\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n          <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n        </svg>\n        <span className=\"text-sm\">(Esc)</span>\n      </div>\n\n      {/* <!-- Add margin if you want to see some of the overlay behind the modal--> */}\n      <div className=\"modal-content py-4 text-left px-6\">\n        {/* <!--Title--> */}\n        <div className=\"flex justify-between items-center pb-3\">\n          <p className=\"text-2xl font-bold\">{offerTitle}</p>\n          <div \n          onClick={dismissImageDialog} \n          className=\"modal-close cursor-pointer z-50\">\n            <svg className=\"fill-current text-black\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n              <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n            </svg>\n          </div>\n        </div>\n\n\n        {/* <div class=\"max-w-sm w-full lg:max-w-full lg:flex\">\n          <div class=\"h-48 lg:h-auto lg:w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\" style={{backgroundImage : `url(${'https://img.ticketak.com/assets/images/movies/HeaderImage/5e4d29917b48d.jpg'})`}} title=\"Woman holding a mug\">\n          </div>\n          <div class=\"bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal\">\n            <div class=\"mb-8\">\n              <p class=\"text-sm text-gray-600 flex items-center\">\n                <svg class=\"fill-current text-gray-500 w-3 h-3 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                  <path d=\"M4 8V6a6 6 0 1 1 12 0v2h1a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-8c0-1.1.9-2 2-2h1zm5 6.73V17h2v-2.27a2 2 0 1 0-2 0zM7 6v2h6V6a3 3 0 0 0-6 0z\" />\n                </svg>\n                Members only\n              </p>\n              <div class=\"text-gray-900 font-bold text-xl mb-2\">Can coffee make you a better developer?</div>\n              <p class=\"text-gray-700 text-base\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatibus quia, nulla! Maiores et perferendis eaque, exercitationem praesentium nihil.</p>\n            </div>\n            <div class=\"flex items-center\">\n              <img class=\"w-10 h-10 rounded-full mr-4\" src={'https://img.ticketak.com/assets/images/movies/HeaderImage/5e4d29917b48d.jpg'} alt=\"Avatar of Jonathan Reinink\"/>\n              <div class=\"text-sm\">\n                <p class=\"text-gray-900 leading-none\">Jonathan Reinink</p>\n                <p class=\"text-gray-600\">Aug 18</p>\n              </div>\n            </div>\n          </div>\n        </div> */}\n\n\n        <img \n        className=\"w-56 mx-auto\"\n        src={`https://offers-a.herokuapp.com${offerQrCodePath}`}\n        alt=\"image_dailog\"/>\n\n        \n\n\n        \n        {/* <!--Footer--> */}\n        <div className=\"flex justify-end pt-2\">\n          \n        </div>\n        \n      </div>\n    </div>\n  </div>\n      \n    </>\n    \n  )\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport AppBody from './ui/common/AppBody'\nimport {AppBar} from './ui/common/AppBar'\nimport {ToastMessage} from './ui/common/ToastMessage'\nimport {GlobalProvider} from './ui/context/GlobalState'\nimport {AppDialog} from './ui/common/AppDialog'\nimport {ImageDialog} from './ui/common/ImageDialog'\n\n\n\n\nfunction App() {\n\n  return (\n   <GlobalProvider>\n     <Router>\n      <AppBar/>\n      <AppBody/>\n      <ToastMessage/>\n      <AppDialog/>\n      <ImageDialog/>\n     </Router>\n   </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}